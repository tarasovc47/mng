<?php
/**
 * Created by PhpStorm.
 * User: asmild
 * Date: 03.04.18
 * Time: 16:11
 */

namespace common\models\radius;
use yii\data\SqlDataProvider;
use Yii;
use yii\db\ActiveRecord;

class RadiusArch  extends ActiveRecord
{
    public $login;
    public $macaddr;
    public $ipv4;
    public $ipv6;
    public $nas;
    public $status;
    public $begin;
    public $end;

    public static function getDb()
    {
        return \Yii::$app->db_radarch; // TODO: Change the autogenerated stub
    }

    public static function tableName()
    {
        return 'pppoe_sessions'; // TODO: Change the autogenerated stub
    }

    public function attributeLabels()
    {
        return [
            'login' => 'Логин',
            'macaddr' => 'MAC адрес',
            'ipv4' => 'IP адрес',
            'nas' => 'NAS',
            'ipv6' => 'IPv6 префикс',
            'status' => 'Статус',
            'begin' => 'От',
            'end' => 'До',

        ];
    }

    /*public function rules()
    {
        return [

            [['login','macaddr','ipv4','ipv6'],'trim'],
            ['ipv4','ip','ipv4'=>true,'subnet'=> null, 'expandIPv6'=> false,"message"=>"Неверный IP адрес!"],
            ['macaddr','validateMacAddr','skipOnEmpty'=> true,'skipOnError'=>true],
            [['begin','end'],'required'],
            [['login','macaddr','ipv4','ipv6'],function($attribute, $params, $validator){
                if(empty($this->login) && empty($this->macaddr) && empty($this->ipv4) && empty($this->ipv6)) {
                    $this->addError($attribute,"Заполните хотя бы одно из полей");
                }
            },'skipOnEmpty'=> false,'skipOnError'=>false],
        ];
    }

    public function validateMacAddr($attribute, $params){
        if(!filter_var($this->$attribute,FILTER_VALIDATE_MAC)){
            $this->addError($attribute, "Неверный MAC адрес!");
        }
    }*/

    public static function Archive($data){
        $login = $data['login'];
        $macaddr = $data['macaddr'];
        $ipv4 = $data['ipv4'];
        $ipv6 = $data['ipv6'];
        $end = $data['end'];
        $begin = $data['begin'];
        $limit = 100;
        $archive_data = [];

        $totalCount = Yii::$app->db_radarch->createCommand("SELECT COUNT(*) FROM pppoe_sessions Where started_at BETWEEN '".$begin."' AND '".$end."' AND  login='".$login."'")->queryScalar();

//        $db_connection = pg_connect("
//            host=10.60.249.6
//            dbname=radiusarch
//            user=web
//            password=webparol
//            connect_timeout=1");

        $sql = "SELECT * FROM pppoe_sessions WHERE started_at BETWEEN '".$begin."' AND '".$end."' AND login ='".$login."'";

        $dataProvider = new SqlDataProvider([
            'db'=>'db_radarch',
            'sql' => $sql,
//            'params' => [':login' => $login],
            'totalCount' => (int)$totalCount,
            'pagination' => [
                // количество пунктов на странице
                'pageSize' => 10,
            ],
            /*'sort' => [
                'attributes' => [
                    'started_at'=>[
                        'desc'
                    ],
                ],
            ],*/
        ]);
        return $dataProvider;
    }

}