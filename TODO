Общее:
    ■ Убрать в локальных css margin для nav-tabs (сделано глобально) 
    ■ Выбор главной (контрооелр) из профиля юзера (по умлочанию рабочий стол)
    ■ Назначение прав начальниками для подчинённых с раб стола

Документы:    
    ■ Сделать группы документов

Зоны присутствия:
    ■ Сделать теги   
    ■ Создать механизм "Скидки и акции". Акции будут огриничиваться временем и кол-вом подключений (должен быть ручной стоп)
    
    ■ Шаблонизатор в создание схемы объекта
        
    ■ В договорах доступа подумать над сортировкой Действует до
    
    ■ Доступы

    ■ Поправить список контактов, эл. адреса перенести в соответствующую графу,И убрать лишние пробелы.
    ■ В ТП (тарифные планы Интернет , пакеты) добавить  ячейку Скорость для указания скорости доступа к сети,
    ■ Также думаю необходимо указать количество каналов.

    ■ По адресам по радио доступу необходима строка о тех. экспертизе- бесплатно она проводится или платно.

    ■ JS 234 строка обязательно доделать!!!

    ■ Пересмотреть метод выдачи тарифов во вьюшку адреса

    ■ Схема объекта единой матрицей (ваще хз как, но сделать)

    ■ Сделать теги для адреса (но лучше не делать)

    ■ Убрать поле комментарий под кнопочку

    ■ динамическая хар-ка в тарифах

    ■ Прикрутить чузэн на страницу поиска адреса

    ■ В контактных лицах на индекс вывести УК

    ■ Массовая привязка
        ■ Сделать кнопку под виджетом, которая будет формировать выдачу адресов
        ■ У каждого адреса типа плюсика - добавить (будет добавлять в скрытое поле, а в выдаче отмечаться)
        ■ Можно будет искать сразу несколько улиц


Поиск:
    ■ Добавить в критерии аналитику
    ■ Добавить в критерии адрес подключения
    ■ Галочка искать только активных (включена по умолчанию)
    ■ Когда в фокусе выбор тарифного плана отключать нажатие кнопки Поиск по нажатию Enter
    ■ Вынести настройку поиска в другое место (шестерёнку где-нибудь в самом поиске, будет выпадающее меню, там пункт - Отображать столбцы и внутри уже настройка)

    ■ СДЕЛАТЬ ПРОВЕРКУ НА ЗАПОЛНЕННОСТЬ ПОИСКОВОГО ЗАПРОСА И ВЫДАВАТЬ ОШИБКУ ЕСЛИ ПУСТО!!!!

    ■ Посмотреть откуда берётся пустая строка в карточке клиента!!!!

    ■ Поехала вёрстка в поиске! Тарифные планы

    ■ как вытаскивать адрес оказания услуги и соотносить его с зонами надо подумать
    
Заявки:
    ■ Срез данных о сервисе и клиенте при создании завявки




 ■ нужно написать модель, покрыть ее тестами. контроллеры и api - потом
 ■ Тикет представляет собой атомарную, неделимую работу, которую должен выполнить один человек в определенном месте в определенный временной промежуток.
Поля:
- name
- planned_start_on
- start_on
- planned_end_on
- end_on
- description
- on_complete (нужен тип поля)

Связи:
- messages - сообщения. отдельная таблица с сообщениями. в сообщениях самих тоже нужно применить полиморфическую связь, messageable_type, messageable_id, таким образом можем крепить комментарии не только к тикетам, а к чему угодно, не добавляя новых полей. также есть атрибут текста. связь с автором сообщения и прикрепленные файлы во множественном числе. реализацию файлов можешь придумать сама, я лично сделал бы отдельную модель attachment
- checklist_items - пока не делать
- problem_tickets - у тикета в статусе stalled есть problem tickets в статусе new/in_progress/stalled/review, которые не дают ему из этого статуса выйти
- stalled_ticket - тикет, для которого данный является проблемой. stalled_ticket_id
- tickets - подзадачи. при завершении всех подзадач (complete) главная задача тоже завершается автоматически
- ticket - главная задача. ticket_id, либо parent_ticket_id - это более descriptive
- user - исполнитель, поле user_id
- author - автор, author_id
- reviewer - reviewer_id
- position - должность. пока не делаем
- ticketable - полиморфическая связь ticketable_type:string, ticketable_id:integer
- brigade - пока не делаем

Статусы:
- pending - ожидает запуска. либо по скрипту, либо по дате старта
- new - новый
- stopped - отменен. 
- review - проверка исполнения
- expired - просрочен
- in_progress - в работе
- complete - завершен (закрыт)
- stalled - заморожен

Возможные переходы:
- accept - принятие тикета. состояние меняется с new на in_progress
- finish - завершение. expired, in_progress => complete или review, если указан reviewer
- autofinish - автоматическое завершение, аналогично завершению, только допускаются исходными статусами new и pending
- pause - откладывание тикета из-за возникшей проблемы. in_progress => stalled
- resume - возобновление работы. stalled, pending => new
- approve - review => complete
- decline - review => new
- stop - any => stopped
- delegate - any - in_progress => same; in_progress => new
- expire - new, in_progress => expired
- prolong - expired => in_progress

Валидация:
- кроме new, pending, stopped - user
- review - reviewer
- name
- position, если user не указан
- user, если position не указан
- start_on
- planned_start_on
- Даты начала не должны быть в прошлом